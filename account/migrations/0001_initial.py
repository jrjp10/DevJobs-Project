# Generated by Django 5.0.4 on 2024-04-08 11:10

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=14)),
                ('role', models.CharField(choices=[('company', 'Company'), ('candidate', 'Candidate'), ('admin', 'Admin')], default='candidate', max_length=10)),
                ('is_active', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name='name')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('skills', models.CharField(blank=True, max_length=255, null=True, verbose_name='skills')),
                ('experience', models.CharField(blank=True, max_length=100, null=True, verbose_name='experience')),
                ('education', models.CharField(blank=True, max_length=255, null=True, verbose_name='education')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', verbose_name='resume')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'candidate_profile',
                'verbose_name_plural': 'candidate_profiles',
                'db_table': 'candidate_profile',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255, verbose_name='company_name')),
                ('industry', models.CharField(max_length=100, verbose_name='industry')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('website', models.URLField(blank=True, null=True, verbose_name='website')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'company_profile',
                'verbose_name_plural': 'company_profiles',
                'db_table': 'company_profile',
            },
        ),
    ]
